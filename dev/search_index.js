var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"CurrentModule = KissABC","category":"page"},{"location":"#KissABC-1","page":"Home","title":"KissABC","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [KissABC]","category":"page"},{"location":"#KissABC.Factored","page":"Home","title":"KissABC.Factored","text":"Factored{N} <: Distribution{MixedVariate, MixedSupport}\n\na Distribution type that can be used to combine multiple Distribution's and sample from them.\n\nExample: it can be used as prior = Factored(Normal(0,1), Uniform(-1,1))\n\n\n\n\n\n","category":"type"},{"location":"#KissABC.ABC","page":"Home","title":"KissABC.ABC","text":"ABC(prior, simulation, data, distance, α_target; nparticles = 100, params = (), parallel = false)\n\nClassical ABC rejection algorithm.\n\nArguments:\n\nprior: a Distribution to use for sampling candidate parameters\nsimulation: simulation function sim(prior_sample, constants) -> data that accepts a prior sample and the params constant and returns a simulated dataset\ndata: target dataset which must be compared with simulated datasets\ndistance: distance function dist(x,y) that return the distance (a scalar value) between x and y\nα_target: target acceptance rate for ABC rejection algorithm\nnparticles:  number of samples from the approximate posterior that will be returned\nparams: an optional set of constants to be passed as second argument to the simulation function\nparallel: when set to true multithreaded parallelism is enabled\n\n\n\n\n\n","category":"function"},{"location":"#KissABC.ABCSMCPR","page":"Home","title":"KissABC.ABCSMCPR","text":"ABCSMCPR(prior, simulation, data, distance, ϵ_target; nparticles = 100, maxsimpp = 1000.0, α = 0.3, c = 0.01, parallel = false, params = (), verbose = true)\n\nSequential Monte Carlo algorithm (Drovandi et al. 2011).\n\nArguments:\n\nprior: a Distribution to use for sampling candidate parameters\nsimulation: simulation function sim(prior_sample, constants) -> data that accepts a prior sample and the params constant and returns a simulated dataset\ndata: target dataset which must be compared with simulated datasets\ndistance: distance function dist(x,y) that return the distance (a scalar value) between x and y\nϵ_target: maximum acceptable distance between simulated datasets and the target dataset\nnparticles: number of samples from the approximate posterior that will be returned\nmaxsimpp: average maximum number of simulations per particle\nα: proportion of particles to retain at every iteration of SMC, other particles are resampled\nc: probability that a sample will not be updated during one iteration of SMC\nparallel: when set to true multithreaded parallelism is enabled\nparams: an optional set of constants to be passed as second argument to the simulation function\nverbose: when set to true verbosity is enabled\n\n\n\n\n\n","category":"function"},{"location":"#Base.rand-Tuple{Random.AbstractRNG,Factored}","page":"Home","title":"Base.rand","text":"rand(rng::AbstractRNG, factoreddist::Factored)\n\nfunction to sample one element from a Factored object\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.pdf-Tuple{Factored,Any}","page":"Home","title":"Distributions.pdf","text":"pdf(d::Factored, x) = begin\n\nFunction to evaluate the pdf of a Factored distribution object\n\n\n\n\n\n","category":"method"},{"location":"#KissABC.compute_kernel_scales","page":"Home","title":"KissABC.compute_kernel_scales","text":"compute_kernel_scales(prior::Distribution, V)\n\nFunction whose purpose is to compute the characteristic scale of the perturbation kernel appropriate for prior given the Vector V of parameters\n\n\n\n\n\n","category":"function"},{"location":"#KissABC.kernel","page":"Home","title":"KissABC.kernel","text":"kernel(prior::Distribution, c, scale)\n\nFunction whose purpose is returning the appropriate Distribution to use as a perturbation kernel on sample c and characteristic scale\n\nArguments:\n\nprior: prior distribution\nc: sample acting as center of perturbation kernel\nscale: characteristic scale of perturbation kernel\n\n\n\n\n\n","category":"function"},{"location":"#KissABC.kerneldensity","page":"Home","title":"KissABC.kerneldensity","text":"kerneldensity(prior::Distribution, scales, s1, s2)\n\nFunction whose purpose is returning the probability density of observing s2 under the kernel centered on s1 with scales given by scales and appropriate for prior.\n\n\n\n\n\n","category":"function"},{"location":"#KissABC.perturb","page":"Home","title":"KissABC.perturb","text":"perturb(prior::Distribution, scales, sample)\n\nFunction whose purpose is perturbing sample according to the appropriate kernel for prior with characteristic scales.\n\n\n\n\n\n","category":"function"}]
}
